---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { Image } from 'astro:assets';
import { formatDate } from '../../utils/dateUtils';
import SEO from '../../components/SEO.astro';
import SchemaOrg from '../../components/SchemaOrg.astro';
import SocialShare from '../../components/SocialShare.astro';
import RecentPosts from '../../components/RecentPosts.astro';
import Ad from '../../components/Ad.astro';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const fullImageUrl = entry.data.image ? new URL(entry.data.image, Astro.site).toString() : undefined;

const keywords = ['chismesito', 'blog', 'noticias', 'entretenimiento', entry.data.title.toLowerCase()];

const schemaBlogPost = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": entry.data.title,
  "image": fullImageUrl,
  "datePublished": entry.data.pubDate.toISOString(),
  "dateModified": entry.data.updatedDate ? entry.data.updatedDate.toISOString() : entry.data.pubDate.toISOString(),
  "author": {
    "@type": "Person",
    "name": entry.data.author || "Chismesito Team"
  },
  "publisher": {
    "@type": "Organization",
    "name": "Chismesito",
    "logo": {
      "@type": "ImageObject",
      "url": "https://chismesito.cl/logo.png"
    }
  },
  "description": entry.data.description
};

const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();
---

<Layout title={entry.data.title} description={entry.data.description}>
  <SEO 
    title={entry.data.title}
    description={entry.data.description}
    image={fullImageUrl}
    imageAlt={entry.data.imageAlt || entry.data.title}
    canonical={canonicalURL}
    type="article"
    publishDate={entry.data.pubDate.toISOString()}
    modifiedDate={entry.data.updatedDate ? entry.data.updatedDate.toISOString() : entry.data.pubDate.toISOString()}
    author={entry.data.author || "Chismesito Team"}
    keywords={keywords}
  />
  <SchemaOrg schema={schemaBlogPost} />
  <article class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    <header class="mb-8">
      <h1 class="text-4xl font-bold mb-2 text-gray-900 dark:text-gray-100">{entry.data.title}</h1>
      <p class="text-gray-600 dark:text-gray-400 mb-4">
        Por {entry.data.author || "Chismesito Team"} | Publicado el {formatDate(entry.data.pubDate)}
        {entry.data.updatedDate && ` | Actualizado el ${formatDate(entry.data.updatedDate)}`}
      </p>
    </header>
    
    {entry.data.image && (
      <Image
        src={entry.data.image}
        alt={entry.data.imageAlt || entry.data.title}
        width={1200}
        height={630}
        class="w-full h-auto rounded-lg mb-8 shadow-lg"
      />
    )}
    
    <div class="prose prose-lg max-w-none mb-12 text-gray-800 dark:text-gray-200">
      <Content />
    </div>
    
    <SocialShare url={Astro.url} title={entry.data.title} />
    
    <Ad type="popunder" />
  </article>
  
  <RecentPosts />
</Layout>

<style>
  /* Estilos globales para el contenido */
  .content :global(h2) {
    @apply text-texto-sec text-balance leading-[1.3] font-bold mb-6 text-gray-800 dark:text-gray-200;
  }

  .content :global(h3) {
    @apply text-2xl sm:text-3xl font-semibold my-4 text-gray-800 dark:text-gray-200;
  }

  .content :global(h4) {
    @apply text-xl sm:text-2xl font-semibold my-4 text-gray-800 dark:text-gray-200;
  }
  
  .content :global(p) {
    @apply text-gray-700 dark:text-gray-300 leading-relaxed;
  }

  .content :global(ul), .content :global(ol) {
    @apply ml-6 mb-6 list-disc;
  }

  .content :global(li) {
    @apply mb-2 text-gray-700 dark:text-gray-300;
  }

  .content :global(a) {
    @apply text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-200 transition-colors duration-300;
  }

  /* Estilos para bloques de código */
  .content :global(pre) {
    @apply bg-gray-100 dark:bg-gray-800 p-4 rounded-md overflow-x-auto mb-6 text-sm;
  }

  .content :global(code) {
    @apply font-mono text-sm bg-gray-100 dark:bg-gray-800 px-1 py-0.5 rounded;
  }

  /* Estilos para imágenes dentro del contenido */
  .content :global(img) {
    @apply rounded-lg shadow-md my-8 mx-auto;
  }

  /* Estilos para citas */
  .content :global(blockquote) {
    @apply border-l-4 border-[#1c51a7] p-4 italic my-6 text-gray-600 dark:text-gray-400 bg-[#6a8bd173] rounded-br-[7px] rounded-tr-[7px];
  }

  /* Estilos para tablas */
  .content :global(table) {
    @apply w-full border-collapse mb-6;
  }

  .content :global(th), .content :global(td) {
    @apply border border-gray-300 dark:border-gray-700 px-4 py-2 text-left;
  }

  .content :global(th) {
    @apply bg-gray-100 dark:bg-gray-800 font-semibold;
  }
</style>